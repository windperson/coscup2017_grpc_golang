// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coscup2017_grpc_proto/save_text/save.proto

/*
Package coscup2017demo_saving is a generated protocol buffer package.

It is generated from these files:
	coscup2017_grpc_proto/save_text/save.proto

It has these top-level messages:
	SaveResultRequest
	SaveResultResponse
*/
package coscup2017demo_saving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SaveResultRequest struct {
}

func (m *SaveResultRequest) Reset()                    { *m = SaveResultRequest{} }
func (m *SaveResultRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveResultRequest) ProtoMessage()               {}
func (*SaveResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SaveResultResponse struct {
	ClientId   int32                      `protobuf:"varint,1,opt,name=clientId" json:"clientId,omitempty"`
	Recognized string                     `protobuf:"bytes,2,opt,name=recognized" json:"recognized,omitempty"`
	Timestamp  *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *SaveResultResponse) Reset()                    { *m = SaveResultResponse{} }
func (m *SaveResultResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveResultResponse) ProtoMessage()               {}
func (*SaveResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SaveResultResponse) GetClientId() int32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *SaveResultResponse) GetRecognized() string {
	if m != nil {
		return m.Recognized
	}
	return ""
}

func (m *SaveResultResponse) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*SaveResultRequest)(nil), "coscup2017demo.saving.SaveResultRequest")
	proto.RegisterType((*SaveResultResponse)(nil), "coscup2017demo.saving.SaveResultResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SaveTextService service

type SaveTextServiceClient interface {
	SaveResult(ctx context.Context, in *SaveResultRequest, opts ...grpc.CallOption) (SaveTextService_SaveResultClient, error)
}

type saveTextServiceClient struct {
	cc *grpc.ClientConn
}

func NewSaveTextServiceClient(cc *grpc.ClientConn) SaveTextServiceClient {
	return &saveTextServiceClient{cc}
}

func (c *saveTextServiceClient) SaveResult(ctx context.Context, in *SaveResultRequest, opts ...grpc.CallOption) (SaveTextService_SaveResultClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_SaveTextService_serviceDesc.Streams[0], c.cc, "/coscup2017demo.saving.SaveTextService/SaveResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &saveTextServiceSaveResultClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SaveTextService_SaveResultClient interface {
	Recv() (*SaveResultResponse, error)
	grpc.ClientStream
}

type saveTextServiceSaveResultClient struct {
	grpc.ClientStream
}

func (x *saveTextServiceSaveResultClient) Recv() (*SaveResultResponse, error) {
	m := new(SaveResultResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for SaveTextService service

type SaveTextServiceServer interface {
	SaveResult(*SaveResultRequest, SaveTextService_SaveResultServer) error
}

func RegisterSaveTextServiceServer(s *grpc.Server, srv SaveTextServiceServer) {
	s.RegisterService(&_SaveTextService_serviceDesc, srv)
}

func _SaveTextService_SaveResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SaveResultRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SaveTextServiceServer).SaveResult(m, &saveTextServiceSaveResultServer{stream})
}

type SaveTextService_SaveResultServer interface {
	Send(*SaveResultResponse) error
	grpc.ServerStream
}

type saveTextServiceSaveResultServer struct {
	grpc.ServerStream
}

func (x *saveTextServiceSaveResultServer) Send(m *SaveResultResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SaveTextService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coscup2017demo.saving.SaveTextService",
	HandlerType: (*SaveTextServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveResult",
			Handler:       _SaveTextService_SaveResult_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "coscup2017_grpc_proto/save_text/save.proto",
}

func init() { proto.RegisterFile("coscup2017_grpc_proto/save_text/save.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x89, 0xa2, 0xb8, 0xe3, 0x41, 0x8c, 0x08, 0xa5, 0x07, 0x2d, 0x7b, 0xaa, 0x1e, 0xd2,
	0xb5, 0x1e, 0xf4, 0x15, 0xbc, 0x66, 0xf7, 0x5e, 0xba, 0xe9, 0x18, 0x02, 0x6d, 0x13, 0x9b, 0x69,
	0x58, 0x7c, 0x04, 0x9f, 0x5a, 0x4c, 0xd9, 0xed, 0x82, 0x1e, 0xbc, 0xcd, 0xfc, 0x7c, 0xc3, 0x7c,
	0x3f, 0x3c, 0x2a, 0xeb, 0xd5, 0xe8, 0xca, 0xd5, 0xd3, 0x4b, 0xa5, 0x07, 0xa7, 0x2a, 0x37, 0x58,
	0xb2, 0x85, 0xaf, 0x03, 0x56, 0x84, 0x3b, 0x8a, 0x93, 0x88, 0x21, 0xbf, 0x9d, 0xd9, 0x06, 0x3b,
	0x2b, 0x7c, 0x1d, 0x4c, 0xaf, 0xd3, 0x7b, 0x6d, 0xad, 0x6e, 0xb1, 0x88, 0xd0, 0x76, 0x7c, 0x2f,
	0xc8, 0x74, 0xe8, 0xa9, 0xee, 0xdc, 0x74, 0xb7, 0xbc, 0x81, 0xeb, 0x75, 0x1d, 0x50, 0xa2, 0x1f,
	0x5b, 0x92, 0xf8, 0x31, 0xa2, 0xa7, 0xe5, 0x17, 0x03, 0x7e, 0x9c, 0x7a, 0x67, 0x7b, 0x8f, 0x3c,
	0x85, 0x0b, 0xd5, 0x1a, 0xec, 0xe9, 0xad, 0x49, 0x58, 0xc6, 0xf2, 0x33, 0x79, 0xd8, 0xf9, 0x1d,
	0xc0, 0x80, 0xca, 0xea, 0xde, 0x7c, 0x62, 0x93, 0x9c, 0x64, 0x2c, 0x5f, 0xc8, 0xa3, 0x84, 0xbf,
	0xc2, 0xe2, 0xf0, 0x3a, 0x39, 0xcd, 0x58, 0x7e, 0x59, 0xa6, 0x62, 0x92, 0x13, 0x7b, 0x39, 0xb1,
	0xd9, 0x13, 0x72, 0x86, 0xcb, 0x00, 0x57, 0x3f, 0x2e, 0x1b, 0xdc, 0xd1, 0x1a, 0x87, 0x60, 0x14,
	0x72, 0x05, 0x30, 0xeb, 0xf1, 0x5c, 0xfc, 0xd9, 0x5d, 0xfc, 0xea, 0x95, 0x3e, 0xfc, 0x83, 0x9c,
	0xba, 0xae, 0xd8, 0xf6, 0x3c, 0x6a, 0x3d, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xac, 0x15, 0x80,
	0xb9, 0x86, 0x01, 0x00, 0x00,
}
